#!/usr/bin/bash

################################################################
################################################################
# Step 3: Training BGW-TWAS gene expression prediction model by EM-MCMC algorithm
# Employ Makefile generated by a Perl script
################################################################
################################################################

#################################
VARS=`getopt -o "" -a -l \
BGW_dir:,wkdir:,gene_name:,GeneInfo:,select_filehead:,LDdir:,Zscore_dir:,Nsample:,maf:,hfile:,em:,burnin:,Nmcmc:,CPP_thresh:,num_cores:,pp_cis:,pp_trans:,a_gamma:,b_gamma:,clean_output: \
-- "$@"`

if [ $? != 0 ]
then
    echo "Please provide required input arguments. Terminating....." >&2
    exit 1
fi

##########################################
# Setting Input Argument Values
##########################################
eval set -- "$VARS"

while true
do
    case "$1" in
    	--BGW_dir|-BGW_dir) BGW_dir=$2; shift 2;;
        --wkdir|-wkdir) wkdir=$2; shift 2;;
        --gene_name|-gene_name) gene_name=$2; shift 2;;
        --GeneInfo|-GeneInfo) GeneInfo=$2; shift 2;;
        --select_filehead|-select_filehead) select_filehead=$2; shift 2;;
        --LDdir|-LDdir) LDdir=$2; shift 2;;
        --Zscore_dir|-Zscore_dir) Zscore_dir=$2; shift 2;;
        --Nsample|-Nsample) Nsample=$2; shift 2;;
        --maf|-maf) maf=$2; shift 2;;
		--hfile|-hfile) hfile=$2; shift 2;;
		--em|-em) em=$2; shift 2;;
		--burnin|-burnin) burnin=$2; shift 2;;
		--Nmcmc|-Nmcmc) Nmcmc=$2; shift 2;;
        --CPP_thresh|-CPP_thresh) CPP_thresh=$2; shift 2;;
        --num_cores|-num_cores) num_cores=$2; shift 2;;
        --pp_cis|-pp_cis) pp_cis=$2; shift 2;;
        --pp_trans|-pp_trans) pp_trans=$2; shift 2;;
        --a_gamma|-a_gamma) a_gamma=$2; shift 2;;
        --b_gamma|-b_gamma) b_gamma=$2; shift 2;;
        --clean_output|-clean_output) clean_output=$2; shift 2;;
        --) shift;break;;
        *) echo "Wrong input arguments!";exit 1;;
        esac
done

##########################################
# Setting Default Input Argument Values
##########################################
Nsample=${Nsample:-1000}
maf=${maf:-0.01}
em=${em:-2}
burnin=${burnin:-10000}
Nmcmc=${Nmcmc:-10000}
CPP_thresh=${CPP_thresh:-0.0001}
num_cores=${num_cores:-1}
pp_cis=${pp_cis:-0.00001}
pp_trans=${pp_trans:-0.000001}
a_gamma=${a_gamma:-1}
b_gamma=${b_gamma:-2}
clean_output=${clean_output:-1}


echo num_cores = ${num_cores};
echo CPP_thresh = ${CPP_thresh}

### Extract gene info from ${GeneExpFile}
gene_info=$(awk -F'\t' -v gene=${gene_name} '$5==gene{print ; exit; }'  ${GeneExpFile})
target_chr=$(echo ${gene_info} | awk 'FS {print $1}');
start_pos=$(echo ${gene_info} | awk 'FS {print $2}');
end_pos=$(echo ${gene_info} | awk 'FS {print $3}');
echo Study gene ${gene_name} from CHR ${target_chr} with cis-region ranging from ${start_pos} to ${end_pos}...
echo Sample size N=${Nsample} ...

### Phenotype variance
# pv=`awk 'NR==1{print $2}' ${wkdir}/${gene_name}_geneExp_var.txt`

### Fileheads of segmented genome blocks
if [ -z ${select_filehead} ] ; then
	echo "Selected filehead txt file is not provided."
    select_filehead=${wkdir}/${gene_name}_select_filehead.txt
    echo Default Selected filehead txt file : ${select_filehead}
fi

### Specify output make file directory and generate makefile
### Set up file directories
mkdir -p ${wkdir}/${gene_name}_EM_MCMC
cd ${wkdir}/${gene_name}_EM_MCMC

if [ -z ${Zscore_dir} ] ; then
    Zscore_dir=${wkdir}/${gene_name}_Zscores
    echo Default summary Zscore statistics file directory: $Zscore_dir
else
    echo Summary Zscore statistics file directory is provided as ${Zscore_dir} ;
fi

mkfile="${wkdir}/${gene_name}_EM_MCMC/${gene_name}_BGW.mk"

${BGW_dir}/bin/gen_mkf.pl \
--wkdir ${wkdir}/${gene_name}_EM_MCMC --BGW_dir ${BGW_dir} \
--LDdir ${LDdir} --Zscore_dir ${Zscore_dir} --filehead ${select_filehead} \
--hfile ${hfile} --Nsample ${Nsample} --maf ${maf} \
--targ ${target_chr} --start ${start_pos} --end ${end_pos} \
--Nburnin ${burnin} --Nmcmc ${Nmcmc} \
--pp_cis ${pp_cis} --pp_trans ${pp_trans} \
--a_gamma ${a_gamma} --b_gamma ${b_gamma} \
--em ${em} --mf ${mkfile}

### Run the makefile (./BGW-TWAS/bin/run_Estep.sh and ./BGW-TWAS/bin/run_Mstep.sh are called by make)
make -f ${mkfile} clean
echo Run make with $mkfile and j=${num_cores} parallel jobs
make -k -C ${wkdir}/${gene_name}_EM_MCMC -f ${mkfile} -j ${num_cores} > ${wkdir}/${gene_name}_EM_MCMC/make.output 2> ${wkdir}/${gene_name}_EM_MCMC/make.err

## Only save eQTL weights for SNPs with CPP > CPP_thresh
if [ -s ${wkdir}/${gene_name}_EM_MCMC/Eoutput/paramtemp${em}.txt.gz ] ; then
    echo -e "#CHR\tPOS\tID\tREF\tALT\tMAF\tTrans\tCPP\tBeta\tmBeta\tChisqTest\tPval_svt\tRank" > ${wkdir}/${gene_name}_BGW_eQTL_weights.txt
    zcat ${wkdir}/${gene_name}_EM_MCMC/Eoutput/paramtemp${em}.txt.gz | tail -n+2 | awk -v CPP_thresh=${CPP_thresh} '$8>CPP_thresh{print }'  | sort -nk1,2 >> ${wkdir}/${gene_name}_BGW_eQTL_weights.txt
else
    echo File ${wkdir}/${gene_name}_EM_MCMC/Eoutput/paramtemp${em}.txt.gz is not generated by EM-MCMC algorithm. Please Check Step 3.
    exit
fi

if [ $clean_output -eq 1  ]; then
    rm -rf ${wkdir}/${gene_name}_EM_MCMC
    rm -f ${wkdir}/${gene_name}_exp_trait.txt
fi

exit
